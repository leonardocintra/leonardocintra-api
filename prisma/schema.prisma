// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String   @db.VarChar(100)
  description String?  @db.Text
  active      Boolean  @default(true)
  createdAt   DateTime @default(now())
  plans       Plan[]
}

model Plan {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(100)
  description   String?
  price         Decimal        @db.Decimal()
  product       Product        @relation(fields: [productId], references: [id])
  productId     Int
  active        Boolean        @default(true)
  createdAt     DateTime       @default(now())
  config        Json
  subscriptions Subscription[]
}

model Subscription {
  id              Int           @id @default(autoincrement())
  lead            Leads         @relation(fields: [leadId], references: [id])
  leadId          Int
  plan            Plan          @relation(fields: [planId], references: [id])
  planId          Int
  paymentMethod   PaymentMethod @default(PIX)
  nextBillingDate DateTime?
  createdAt       DateTime      @default(now())
}

model WhatsappGroups {
  id              Int     @id @default(autoincrement())
  groupId         String  @db.VarChar(100)
  name            String  @db.VarChar(100)
  transcribeAudio Boolean @default(true)
}

model WhatsAppAudioToText {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(100)
  phone         String   @db.VarChar(20)
  ownerPhone    String?  @db.VarChar(20)
  sendBy        String   @db.VarChar(20)
  message       String   @db.Text
  messageType   String   @default("text") @db.VarChar(10)
  audioDuration Int      @default(0) @db.Integer
  audioMimetype String   @default("text") @db.VarChar(40)
  isGroup       Boolean  @default(false) @db.Boolean
  createdAt     DateTime @default(now())
}

model Leads {
  id                              Int                               @id @default(autoincrement())
  name                            String                            @db.VarChar(100)
  phone                           String                            @unique @db.VarChar(20)
  email                           String?                           @db.VarChar(100)
  active                          Boolean                           @default(true)
  createdAt                       DateTime                          @default(now())
  WhatsAppAudioToTextAccount      WhatsAppAudioToTextAccount[]
  WhatsAppAudioToTextAccountUsage WhatsAppAudioToTextAccountUsage[]
  Subscription                    Subscription[]
}

model WhatsAppAudioToTextAccount {
  id                   Int       @id @default(autoincrement())
  lead                 Leads     @relation(fields: [leadId], references: [id])
  leadId               Int
  instanceName         String    @unique @db.VarChar(60)
  instanceId           String    @unique @db.VarChar(50)
  hash                 String    @unique @db.VarChar(50)
  active               Boolean   @default(false)
  integration          String    @default("WHATSAPP-BAILEYS") @db.VarChar(50)
  createdAt            DateTime  @default(now())
  notifiedSuccessfully Boolean   @default(true)
  instructionsSent     Boolean   @default(false)
  pairingCode          String?   @db.VarChar(20)
  pairingCodeExpiresAt DateTime?
  pairingCodeManual    Boolean   @default(false)
  retry                Int       @default(0) @db.Integer
}

model WhatsAppAudioToTextAccountUsage {
  id               Int      @id @default(autoincrement())
  lead             Leads    @relation(fields: [leadId], references: [id])
  leadId           Int
  duration         Int
  messageId        String   @db.VarChar(100)
  messageTimestamp Int
  createdAt        DateTime @default(now())
}

enum PaymentMethod {
  PIX
  MERCADO_PAGO_ASSINATURA
}
